// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yeni.Models;

#nullable disable

namespace Yeni.Migrations
{
    [DbContext(typeof(AlısVerisContext))]
    [Migration("20221211102301_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Yeni.Models.Kategoriler", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KategoriID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriId"), 1L, 1);

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(20000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KategoriResmi")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoriler", (string)null);
                });

            modelBuilder.Entity("Yeni.Models.Kullaniciler", b =>
                {
                    b.Property<int>("KullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KullaniciID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciId"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KullaniciId");

                    b.ToTable("Kullaniciler", (string)null);
                });

            modelBuilder.Entity("Yeni.Models.SatisDetaylari", b =>
                {
                    b.Property<int>("SatisId")
                        .HasColumnType("int")
                        .HasColumnName("SatisID");

                    b.Property<int>("UrunId")
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    b.Property<string>("SatisAdi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<short>("UrunMiktari")
                        .HasColumnType("smallint");

                    b.HasKey("SatisId", "UrunId");

                    b.HasIndex("UrunId");

                    b.ToTable("SatisDetaylari", (string)null);
                });

            modelBuilder.Entity("Yeni.Models.Satisler", b =>
                {
                    b.Property<int>("SatisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SatisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SatisId"), 1L, 1);

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("KullaniciID");

                    b.HasKey("SatisId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Satisler", (string)null);
                });

            modelBuilder.Entity("Yeni.Models.Urunler", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UrunID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunId"), 1L, 1);

                    b.Property<int>("KategoriId")
                        .HasColumnType("int")
                        .HasColumnName("KategoriID");

                    b.Property<string>("UrunAciklamasi")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UrunResmi")
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunId");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler", (string)null);
                });

            modelBuilder.Entity("Yeni.Models.SatisDetaylari", b =>
                {
                    b.HasOne("Yeni.Models.Satisler", "Satis")
                        .WithMany("SatisDetaylaris")
                        .HasForeignKey("SatisId")
                        .IsRequired()
                        .HasConstraintName("FK_SatisDetaylari_Satisler");

                    b.HasOne("Yeni.Models.Urunler", "Urun")
                        .WithMany("SatisDetaylaris")
                        .HasForeignKey("UrunId")
                        .IsRequired()
                        .HasConstraintName("FK_SatisDetaylari_Urunler");

                    b.Navigation("Satis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Yeni.Models.Satisler", b =>
                {
                    b.HasOne("Yeni.Models.Kullaniciler", "Kullanici")
                        .WithMany("Satislers")
                        .HasForeignKey("KullaniciId")
                        .IsRequired()
                        .HasConstraintName("FK_Satisler_Kullaniciler");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Yeni.Models.Urunler", b =>
                {
                    b.HasOne("Yeni.Models.Kategoriler", "Kategori")
                        .WithMany("Urunlers")
                        .HasForeignKey("KategoriId")
                        .IsRequired()
                        .HasConstraintName("FK_Urunler_Kategoriler");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Yeni.Models.Kategoriler", b =>
                {
                    b.Navigation("Urunlers");
                });

            modelBuilder.Entity("Yeni.Models.Kullaniciler", b =>
                {
                    b.Navigation("Satislers");
                });

            modelBuilder.Entity("Yeni.Models.Satisler", b =>
                {
                    b.Navigation("SatisDetaylaris");
                });

            modelBuilder.Entity("Yeni.Models.Urunler", b =>
                {
                    b.Navigation("SatisDetaylaris");
                });
#pragma warning restore 612, 618
        }
    }
}
